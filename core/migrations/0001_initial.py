# Generated by Django 4.2 on 2023-08-26 17:34

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Assessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Classroom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField(default=2023)),
            ],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Presence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Relative",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=60, unique=True)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=60)),
                ("slug", models.CharField(max_length=5)),
                ("description", models.CharField(max_length=127, null=True)),
            ],
            options={
                "verbose_name": "matéria",
                "verbose_name_plural": "matérias",
            },
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(default="john.doe@email.com", max_length=254),
                ),
                ("rg", models.CharField(default="", max_length=9)),
                ("cpf", models.CharField(default="", max_length=11)),
                ("phone", models.IntegerField(default=0)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("M", "Masculino"),
                            ("F", "Feminino"),
                            ("NB", "Não Binário"),
                        ],
                        default="M",
                        max_length=2,
                    ),
                ),
                (
                    "public_schooling",
                    models.CharField(
                        choices=[
                            ("C", "Completo"),
                            ("N", "Nenhuma"),
                            ("E", "Ensino Primário"),
                            ("M", "Ensino Fundamental"),
                            ("H", "Ensino Médio"),
                        ],
                        default="M",
                        max_length=1,
                        null=True,
                    ),
                ),
                ("birthdate", models.DateField(default=datetime.date(2008, 1, 1))),
                ("afro", models.BooleanField(default=False)),
                ("indigenous", models.BooleanField(default=False)),
                ("deficiencies", models.CharField(max_length=50, null=True)),
                (
                    "civil_state",
                    models.CharField(
                        choices=[
                            ("S", "Solteiro"),
                            ("M", "Casado"),
                            ("D", "Divorciado"),
                            ("W", "Viúvo"),
                        ],
                        default="S",
                        max_length=1,
                    ),
                ),
                ("cep", models.CharField(default="", max_length=8)),
                ("city", models.CharField(default="São Caetano do Sul", max_length=60)),
                ("neighborhood", models.CharField(max_length=40)),
                ("street", models.CharField(max_length=40)),
                ("street_number", models.IntegerField(default=1)),
                ("complement", models.CharField(max_length=20)),
                ("picture", models.ImageField(null=True, upload_to="users/pictures")),
                ("status", models.CharField(max_length=10, null=True)),
                ("division", models.CharField(max_length=1, null=True)),
                (
                    "classroom",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="students",
                        to="core.classroom",
                    ),
                ),
                ("relatives", models.ManyToManyField(to="core.relative")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "usuário",
                "verbose_name_plural": "usuários",
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=60)),
                ("slug", models.SlugField(default="-", max_length=2, unique=True)),
                (
                    "time",
                    models.CharField(
                        choices=[
                            ("M", "Manhã"),
                            ("E", "Tarde"),
                            ("N", "Noite"),
                            ("F", "Integral"),
                        ],
                        default="M",
                        max_length=1,
                    ),
                ),
                ("info", models.TextField(null=True)),
                ("duration", models.FloatField(default=3)),
                (
                    "coordinator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="courses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("subjects", models.ManyToManyField(to="core.subject")),
            ],
            options={
                "verbose_name": "curso",
                "verbose_name_plural": "cursos",
            },
        ),
        migrations.AddField(
            model_name="classroom",
            name="course",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="classroom",
                to="core.course",
            ),
        ),
        migrations.CreateModel(
            name="Class",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("student_group", models.PositiveSmallIntegerField(null=True)),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("MON", "Segunda-feira"),
                            ("TUE", "Terça-feira"),
                            ("WED", "Quarta-feira"),
                            ("THU", "Quinta-feira"),
                            ("SUN", "Sexta-feira"),
                        ],
                        default="MON",
                        max_length=15,
                    ),
                ),
                ("order", models.PositiveSmallIntegerField()),
                (
                    "classroom",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="core.classroom",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.subject",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "classe",
                "verbose_name_plural": "classes",
            },
        ),
        migrations.CreateModel(
            name="Announcement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(default="", max_length=80)),
                ("date", models.DateField(auto_now=True)),
                ("image", models.ImageField(null=True, upload_to="communicate/covers")),
                ("private", models.BooleanField(default=False)),
                ("info", models.TextField()),
                (
                    "classroom",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.classroom",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.course",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
    ]
